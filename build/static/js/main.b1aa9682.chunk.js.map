{"version":3,"sources":["resources/firebase/config.js","App.js","atoms/Button.jsx","atoms/Form.jsx","atoms/InputLabel.jsx","atoms/TextInput.jsx","molecules/InputContainer.jsx","organisms/StatusForm.jsx","pages/Dashboard.jsx","pages/Landing.jsx","organisms/SignIn.jsx","pages/Authentication.jsx","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","App","Button","props","onClick","buttonAction","label","Form","name","formName","className","formClass","children","InputLabel","htmlFor","labelFor","labelName","TextInput","type","value","onChange","inputAction","inputClass","InputContainer","inputName","StatusForm","useState","status","setStatus","caption","setCaption","episodeNumber","setEpisodeNumber","e","target","preventDefault","archiveRef","collection","addDoc","Date","now","archiveCaption","displayRef","setNewDisplayContent","Dashboard","navigate","useNavigate","useEffect","authToken","sessionStorage","getItem","Landing","getCurrentContent","getDocs","allDocs","then","content","forEach","doc","push","data","setCurrentContent","reverse","episode","SignIn","email","setEmail","password","setPassword","authentication","getAuth","signInWithEmailAndPassword","response","setItem","_tokenResponse","refreshToken","catch","error","code","alert","Authentication","ReactDOM","createRoot","document","getElementById","render","path","element"],"mappings":"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","file":"static/js/main.b1aa9682.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_ID,\n};\n\nexport const app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);","import './App.css';\nimport { useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { db } from './resources/firebase/config';\n\nfunction App() {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    let authToken = sessionStorage.getItem('Auth Token')\n\n    if (authToken) {\n      console.log(authToken);\n    }\n  }, [])\n\n  return (\n    <main className=\"wrapper\">\n      <Link to={'/auth'}>\n        <p>Login</p>\n      </Link>\n    </main>\n  );\n}\n\nexport default App;\n","export default function Button(props) {\n    return (\n        <button\n            onClick={props.buttonAction}\n        >{props.label}</button>\n    );\n}","export default function Form(props){\n    return(\n        <form\n            name={props.formName}\n            className={props.formClass}\n        >\n            {props.children}\n        </form>\n    );\n}","export default function InputLabel(props) {\n    return (\n        <label\n            htmlFor={props.labelFor}\n        >{props.labelName}</label>\n    );\n}","export default function TextInput(props){\n    return (\n        <input\n            type={props.type}\n            name={props.name}\n            value={props.value}\n            onChange={props.inputAction}\n            className={props.inputClass}\n        />\n    )\n}","import { InputLabel, TextInput } from '../atoms';\n\nexport default function InputContainer(props) {\n    return(\n        <div className=\"input-container\">\n            <TextInput\n                name={props.inputName}\n                value={props.value}\n                inputAction={props.inputAction}\n                inputClass={props.inputClass}\n                type={props.type}\n            />\n            <InputLabel\n                labelName={props.labelName}\n                labelFor={props.inputName}\n            />\n        </div>\n    )\n}","import { useState } from \"react\";\nimport { Form, Button } from \"../atoms\";\nimport { InputContainer } from \"../molecules\";\nimport { db } from '../resources/firebase/config';\nimport { addDoc, collection, serverTimestamp } from \"@firebase/firestore\";\n\n\nexport default function StatusForm(){\n    const [status, setStatus] = useState('');\n    const [caption, setCaption] = useState('');\n    const [episodeNumber, setEpisodeNumber] = useState('');\n\n    const archiveCaption = () => {\n        const archiveRef = collection(db, \"archive\")\n        return addDoc(archiveRef, {\n                'created': Date.now(),\n                'caption': caption,\n                'episode': episodeNumber\n            });\n    };\n\n    const setNewDisplayContent = () => {\n        const displayRef = collection(db, \"display\")\n        return addDoc(displayRef, {\n                'created': Date.now(),\n                'caption': caption,\n                'status': status,\n                'episode': episodeNumber\n            });\n    }\n\n    const buttonAction = (e) => {\n        e.preventDefault();\n        archiveCaption();\n        setNewDisplayContent();\n    }\n\n    return (\n        <Form\n            setStatus={setStatus}\n            setCaption={setCaption}\n        >\n            <input\n                type=\"radio\"\n                value=\"alive\"\n                name=\"status\"\n                onChange={(e) => setStatus(e.target.value)}\n                /> Alive :(\n            <input\n                type=\"radio\"\n                value=\"dead\"\n                name=\"status\"\n                onChange={(e) => setStatus(e.target.value)}\n                /> Dead :)\n            <label\n                htmlFor=\"status\">\n                Is Danny Alive?\n            </label>\n            <InputContainer\n                inputName=\"caption\"\n                value={caption}\n                inputAction={(e) => setCaption(e.target.value)}\n                labelName=\"caption\"\n                type=\"caption\"\n            />\n            <InputContainer\n                inputName=\"episodeNumber\"\n                value={episodeNumber}\n                inputAction={(e) => setEpisodeNumber(e.target.value)}\n                labelName=\"episodeNumber\"\n                type=\"episodeNumber\"\n            />\n            <Button\n                buttonAction={buttonAction}\n                label=\"Submit\"\n            />\n        </Form>\n    );\n}","import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport StatusForm from \"../organisms/StatusForm\";\n\nexport default function Dashboard() {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    let authToken = sessionStorage.getItem('Auth Token')\n\n    if (authToken) {\n        navigate('/dashboard')\n    }\n\n    if (!authToken) {\n        navigate('/auth')\n    }\n  }, [])\n\n  return (\n      <section>\n        <StatusForm/>\n      </section>\n  )\n  }","import { useState } from \"react\";\nimport { db } from \"../resources/firebase/config\";\nimport { collection, getDocs } from \"@firebase/firestore\";\nimport { useEffect } from \"react\";\n\nexport default function Landing() {\n  const [status, setStatus] = useState('');\n  const [caption, setCaption] = useState('');\n\n  const getCurrentContent = async () => {\n    const displayRef = collection(db, \"display\");\n    const allDocs = await getDocs(displayRef);\n    return allDocs;\n  }\n\n  const setCurrentContent = (content) => {\n    setStatus(content.status);\n    setCaption(content.caption);\n  }\n\n  const displayAnswer = () => {\n    if (status === 'dead') {\n      return (\n        <h1>Yes :)</h1>\n      )\n    } else {\n      return (\n        <h1>No :(</h1>\n      )\n    }\n  }\n\n  useEffect(() => {\n    getCurrentContent()\n      .then(allDocs => {\n        let content = [];\n        allDocs.forEach((doc) => {\n          content.push(doc.data());\n        });\n\n        const currentContent = content.reverse(content.episode)[0];\n        setCurrentContent(currentContent)\n      })\n  }, [])\n\n\n  return(\n    <main>\n        <h3>Is Danny Stevens Dead Yet?</h3>\n        {displayAnswer()}\n        <h2>{caption}</h2>\n    </main>\n  );\n}","import { useState } from \"react\";\nimport { Form, Button } from \"../atoms\";\nimport { InputContainer } from \"../molecules\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { app } from '../resources/firebase/config';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth'\n\nexport default function SignIn(){\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    const buttonAction = (e) => {\n        e.preventDefault();\n        const authentication = getAuth();\n\n        signInWithEmailAndPassword(authentication, email, password)\n        .then((response) => {\n            sessionStorage.setItem('Auth Token', response._tokenResponse.refreshToken)\n            navigate('/dashboard')\n        })\n        .catch((error) => {\n            if (error.code === 'auth/email-already-in-use') {\n                alert('Email Already in Use');\n            }\n            })\n    }\n\n    return (\n        <Form\n            setEmail={setEmail}\n            setPassword={setPassword}\n        >\n            <InputContainer\n                inputName=\"email\"\n                value={email}\n                inputAction={(e) => setEmail(e.target.value)}\n                inputClass=\"authentication__input--text\"\n                labelName=\"Email\"\n                type=\"text\"\n            />\n            <InputContainer\n                inputName=\"password\"\n                value={password}\n                inputAction={(e) => setPassword(e.target.value)}\n                inputClass=\"authentication__input--text\"\n                labelName=\"Password\"\n                type=\"password\"\n            />\n            <Button\n                buttonAction={buttonAction}\n                label=\"Submit\"\n            />\n        </Form>\n    );\n}","import { SignIn } from \"../organisms\";\n\nexport default function Authentication() {\n    return (\n        <SignIn/>\n    );\n  }","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport { Dashboard, Authentication, Landing } from './pages';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\")\n);\n\nroot.render(\n  <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Landing />} >\n          <Route\n            path=\"*\"\n            element={\n              <main>\n                <p>There's nothing here!</p>\n              </main>\n            }\n          />\n        </Route>\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n        <Route path='/auth' element={<Authentication/>} />\n    </Routes>\n  </BrowserRouter>\n);\n"],"sourceRoot":""}